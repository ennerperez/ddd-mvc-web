<Project Sdk="Microsoft.NET.Sdk">

    <Import Project="..\..\src\.imports\Template.props"/>
    <Import Condition="Exists('Options.props')" Project="Options.props"/>
    <Import Project="..\..\src\.imports\Template.targets"/>
    <Import Condition="Exists('Options.targets')" Project="Options.targets"/>

    <PropertyGroup>
        <IsPackable>false</IsPackable>
        <OutputType>Exe</OutputType>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>none</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <AssemblyAttribute Include="System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverageAttribute"/>
    </ItemGroup>

    <ItemGroup>
        <ProjectReference Include="$(SolutionDir)\src\Business\Business.csproj"/>
        <ProjectReference Include="$(SolutionDir)\src\Domain\Domain.csproj"/>
        <ProjectReference Include="..\Tests.Abstractions\Tests.Abstractions.csproj"/>
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Flurl" Version="4.0.0" />
        <PackageReference Include="Flurl.Http" Version="4.0.2" />
    </ItemGroup>

    <ItemGroup Label="ConditionalReferences">
        <!-- SpecFlow -->
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SolidToken.SpecFlow.DependencyInjection" Version="3.9.3"/>
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SpecFlow.Plus.LivingDocPlugin" Version="3.9.57"/>
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SpecFlow.Tools.MsBuild.Generation" Version="3.9.74"/>
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SpecFlow" Version="3.9.74"/>
        <!-- NUnit -->
        <PackageReference Condition="'$(TestExecutionFramework)' == 'NUnit'" Include="nunit" Version="4.0.1"/>
        <PackageReference Condition="'$(TestExecutionFramework)' == 'NUnit'" Include="NUnit3TestAdapter" Version="4.5.0"/>
        <PackageReference Condition="'$(TestExecutionFramework)' == 'NUnit' AND '$(UsingSpecFlow)' == 'true'" Include="SpecFlow.NUnit" Version="3.9.74"/>
        <!-- xUnit -->
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="xunit" Version="2.9.2" />
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="xunit.runners" Version="2.0.0"/>
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="xunit.runner.visualstudio" Version="3.0.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="xunit.runner.console" Version="2.9.2">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="xunit.runner.utility" Version="2.9.2" />
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="xunit.runner.reporters" Version="2.9.2" />
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="Xunit.Extensions.Ordering" Version="1.4.5"/>
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit'" Include="Xunit.Microsoft.DependencyInjection" Version="8.2.2" />
        <PackageReference Condition="'$(TestExecutionFramework)' == 'xUnit' AND '$(UsingSpecFlow)' == 'true'" Include="SpecFlow.xUnit" Version="3.9.74"/>
    </ItemGroup>

    <!-- Serilog -->
    <ItemGroup Label="Serilog">
        <PackageReference Include="Serilog" Version="4.0.1" />
        <PackageReference Include="Serilog.Sinks.Async" Version="2.0.0" />
        <PackageReference Include="Serilog.Extensions.Logging" Version="8.0.0"/>
        <PackageReference Include="Serilog.Settings.Configuration" Version="8.0.4" />
        <PackageReference Include="Serilog.Sinks.Console" Version="6.0.0" />
        <PackageReference Include="Serilog.Sinks.File" Version="6.0.0" />
        <PackageReference Include="Serilog.Sinks.PeriodicBatching" Version="5.0.0" />
        <PackageReference Include="Serilog.Enrichers.Environment" Version="3.0.1" />
        <PackageReference Include="Serilog.Enrichers.Process" Version="3.0.0" />
        <PackageReference Include="Serilog.Enrichers.Thread" Version="4.0.0" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="appsettings.*.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <DependentUpon>appsettings.json</DependentUpon>
        </Content>
        <Content Include="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Content Include="Definitions\*.ini">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Label="NUnit" Condition="'$(TestExecutionFramework)' == 'NUnit'">
        <None Remove="xunit.runner.json"/>
    </ItemGroup>
    <ItemGroup Label="xUnit" Condition="'$(TestExecutionFramework)' == 'xUnit'">
        <Content Include="xunit.runner.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Label="SpecFlow Settings" Condition="'$(UsingSpecFlow)' == 'false'">
        <None Remove="specflow.json"/>
        <None Remove="specflow.*.json"/>
    </ItemGroup>
    <ItemGroup Label="SpecFlow Settings" Condition="'$(UsingSpecFlow)' == 'true'">
        <Content Include="specflow.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="specflow.Timeouts.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <DependentUpon>specflow.json</DependentUpon>
        </Content>
        <Content Include="specflow.Timeouts.Development.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <DependentUpon>specflow.Timeouts.json</DependentUpon>
        </Content>
    </ItemGroup>

    <ItemGroup Label="SpecFlow Files" Condition="'$(UsingSpecFlow)' == 'false'">
        <Compile Remove="**/*.SpecFlow.cs"/>
        <None Remove="**/*.feature"/>
        <Compile Remove="Helpers/*.cs"/>
        <Compile Remove="Hooks/*.cs"/>
        <Compile Remove="Steps/*.cs"/>
        <Compile Remove="Features/*.cs"/>
        <Compile Remove="Settings/*Specflow*.cs"/>
    </ItemGroup>

</Project>
