<Project Sdk="Microsoft.NET.Sdk">

    <Import Project="..\..\src\.imports\Template.props" />
    <Import Condition="Exists('Options.props')" Project="Options.props" />
    <Import Project="..\..\src\.imports\Template.targets" />
    <Import Condition="Exists('Options.targets')" Project="Options.targets" />

    <PropertyGroup>
        <IsPackable>false</IsPackable>
        <OutputType>Exe</OutputType>
    </PropertyGroup>

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>none</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Tests.Abstractions\Tests.Abstractions.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="Flurl" />
        <PackageReference Include="Flurl.Http" />
        <PackageReference Include="SixLabors.ImageSharp" />
        <PackageReference Include="Selenium.Support" />
        <PackageReference Include="Selenium.WebDriver" />
    </ItemGroup>

    <ItemGroup Label="ConditionalReferences">
        <!-- SpecFlow -->
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SolidToken.SpecFlow.DependencyInjection" Version="3.9.3" />
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SpecFlow.Plus.LivingDocPlugin" Version="3.9.57" />
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SpecFlow.Tools.MsBuild.Generation" Version="3.9.74" />
        <PackageReference Condition="'$(UsingSpecFlow)' == 'true'" Include="SpecFlow" Version="3.9.74" />
        <!-- WebDriver -->
        <PackageReference Condition="'$(UsingChromeDriver)' == 'true'" Include="Selenium.WebDriver.ChromeDriver" Version="119.0.6045.10500" />
        <PackageReference Condition="'$(UsingGeckoDriver)' == 'true'" Include="Selenium.WebDriver.GeckoDriver" Version="0.33.0" />
        <PackageReference Condition="'$(UsingIEDriver)' == 'true'" Include="Selenium.WebDriver.IEDriver" Version="4.14.0" />
    </ItemGroup>

    <!-- Serilog -->
    <ItemGroup>
        <PackageReference Include="Serilog" />
        <PackageReference Include="Serilog.Sinks.Async" />
        <PackageReference Include="Serilog.Extensions.Logging" />
        <PackageReference Include="Serilog.Settings.Configuration" />
        <PackageReference Include="Serilog.Sinks.Console" />
        <PackageReference Include="Serilog.Sinks.File" />
        <PackageReference Include="Serilog.Sinks.PeriodicBatching" />
        <PackageReference Include="Serilog.Enrichers.Environment" />
        <PackageReference Include="Serilog.Enrichers.Process" />
        <PackageReference Include="Serilog.Enrichers.Thread" />
    </ItemGroup>

    <ItemGroup>
        <Content Include="appsettings.Development.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <DependentUpon>appsettings.json</DependentUpon>
        </Content>
        <Content Include="appsettings.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Content Include="Definitions\*.ini">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Label="NUnit" Condition="'$(TestExecutionFramework)' == 'NUnit'">
        <None Remove="xunit.runner.json"/>
    </ItemGroup>
    <ItemGroup Label="xUnit" Condition="'$(TestExecutionFramework)' == 'xUnit'">
        <Content Include="xunit.runner.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
    </ItemGroup>

    <ItemGroup Label="SpecFlow Settings" Condition="'$(UsingSpecFlow)' == 'false'">
        <None Remove="specflow.json"/>
        <None Remove="specflow.*.json"/>
    </ItemGroup>
    <ItemGroup Label="SpecFlow Settings" Condition="'$(UsingSpecFlow)' == 'true'">
        <Content Include="specflow.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </Content>
        <Content Include="specflow.Timeouts.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <DependentUpon>specflow.json</DependentUpon>
        </Content>
        <Content Include="specflow.Timeouts.Development.json">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
            <DependentUpon>specflow.Timeouts.json</DependentUpon>
        </Content>
    </ItemGroup>

    <ItemGroup Label="SpecFlow Files" Condition="'$(UsingSpecFlow)' == 'false'">
        <Compile Remove="**/*.SpecFlow.cs" />
        <None Remove="**/*.feature" />
        <Compile Remove="Helpers/*.cs" />
        <Compile Remove="Hooks/*.cs" />
        <Compile Remove="Steps/*.cs" />
        <Compile Remove="Features/*.cs" />
    </ItemGroup>


</Project>
