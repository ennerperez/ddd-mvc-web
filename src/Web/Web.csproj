<Project Sdk="Microsoft.NET.Sdk.Web">

    <Import Project="..\..\src\.imports\Template.props" />
    <Import Condition="Exists('Options.props')" Project="Options.props" />
    <Import Project="..\..\src\.imports\Template.targets" />
    <Import Condition="Exists('Options.targets')" Project="Options.targets" />

    <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
        <DebugSymbols>true</DebugSymbols>
        <DebugType>none</DebugType>
    </PropertyGroup>

    <ItemGroup>
        <ProjectReference Include="..\Business\Business.csproj" />
    </ItemGroup>

    <ItemGroup>
        <PackageReference Include="BuildBundlerMinifierPlus" />
        <PackageReference Include="Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Analyzers" />
        <PackageReference Include="Microsoft.EntityFrameworkCore.Design">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.EntityFrameworkCore.Tools" >
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.Extensions.Configuration" />
        <PackageReference Include="Microsoft.Extensions.Configuration.CommandLine" />
        <PackageReference Include="Microsoft.Extensions.Configuration.EnvironmentVariables" />
        <PackageReference Include="Microsoft.Web.LibraryManager.Build" />
        <PackageReference Include="Microsoft.AspNetCore.Mvc.Razor.RuntimeCompilation" />
        <PackageReference Include="System.Net.Http" />
    </ItemGroup>

    <ItemGroup Label="Serilog">
        <PackageReference Include="Serilog" />
        <PackageReference Include="Serilog.Sinks.Async" />
        <PackageReference Include="Serilog.AspNetCore" />
        <PackageReference Include="Serilog.Extensions.Logging" />
        <PackageReference Include="Serilog.Settings.Configuration" />
        <PackageReference Include="Serilog.Sinks.Console" />
        <PackageReference Include="Serilog.Sinks.File" />
        <PackageReference Include="Serilog.Sinks.PeriodicBatching" />
        <PackageReference Include="Serilog.Enrichers.Environment" />
        <PackageReference Include="Serilog.Enrichers.Process" />
        <PackageReference Include="Serilog.Enrichers.Thread" />
    </ItemGroup>

    <!--https://github.com/dotnet/aspnetcore/issues/16862-->
    <!--https://github.com/dotnet/Scaffolding/issues/1714-->
    <PropertyGroup Condition="'$(Configuration)' == 'Release'">
        <ResolveStaticWebAssetsInputsDependsOn>RemoveIdentityAssets</ResolveStaticWebAssetsInputsDependsOn>
    </PropertyGroup>
    <Target Name="RemoveIdentityAssets" Condition=" '$(Configuration)' == 'Release' ">
        <ItemGroup>
            <StaticWebAsset Remove="@(StaticWebAsset)" Condition="%(SourceId) == 'Microsoft.AspNetCore.Identity.UI'" />
        </ItemGroup>
    </Target>

    <ItemGroup Label="ConditionalReferences">
        <PackageReference Condition="'$(UsingIdentity)' == 'true'" Include="Microsoft.Identity.Web" />
        <PackageReference Condition="'$(UsingIdentity)' == 'true'" Include="Microsoft.Identity.Web.UI" />
        <PackageReference Condition="'$(UsingIdentity)' == 'true'" Include="Microsoft.AspNetCore.Identity.UI" />
        <PackageReference Condition="'$(UsingAzureApplicationInsights)' == 'true'" Include="Microsoft.ApplicationInsights.AspNetCore" />
        <PackageReference Condition="'$(UsingBearer)' == 'true' OR '$(UsingAuth0)' == 'true'" Include="Microsoft.AspNetCore.Authentication.JwtBearer" />
        <PackageReference Condition="'$(UsingOpenId)' == 'true'" Include="Microsoft.AspNetCore.Authentication.OpenIdConnect" />
        <PackageReference Condition="'$(UsingAuth0)' == 'true'" Include="Auth0.AspNetCore.Authentication" />
        <PackageReference Condition="'$(UsingNewtonsoft)' == 'true'" Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" />
        <PackageReference Condition="'$(UsingNewtonsoft)' == 'true'" Include="Newtonsoft.Json" />
        <PackageReference Condition="'$(UsingNewtonsoft)' == 'true' AND '$(UsingSwagger)' == 'true'" Include="Swashbuckle.AspNetCore.Newtonsoft" />
        <!--
        <PackageReference Condition="'$(UsingLocalization)' == 'true'" Include="Microsoft.AspNetCore.Localization" />
        <PackageReference Condition="'$(UsingLocalization)' == 'true'" Include="Microsoft.AspNetCore.Localization.Routing" />
        <PackageReference Condition="'$(UsingLocalization)' == 'true'" Include="Microsoft.AspNetCore.Mvc.Localization" />
        -->
        <PackageReference Condition="'$(UsingSwagger)' == 'true'" Include="Swashbuckle.AspNetCore" />
        <PackageReference Condition="'$(UsingSwagger)' == 'true'" Include="Swashbuckle.AspNetCore.Annotations" />
        <PackageReference Condition="'$(UsingSwagger)' == 'true'" Include="Swashbuckle.AspNetCore.ReDoc" />
        <PackageReference Condition="'$(UsingSass)' == 'true'" Include="AspNetCore.SassCompiler" />
        <PackageReference Condition="'$(UsingDatadog)' == 'true'" Include="Serilog.Sinks.Datadog.Logs" />
    </ItemGroup>

    <ItemGroup Condition="'$(UsingSass)' == 'false'">
        <Content Remove="wwwroot\scss\**" />
        <Content Remove="wwwroot\css\bootstrap.css" />
        <Content Remove="wwwroot\css\bootstrap.min.css" />
        <Content Remove="wwwroot\css\bootstrap.css.map" />
    </ItemGroup>

    <ItemGroup>
        <Content Update="appsettings.*.json">
            <DependentUpon>appsettings.json</DependentUpon>
        </Content>
    </ItemGroup>

    <ItemGroup>
        <Content Update="http-client.env.json">
            <DependentUpon>http-client.http</DependentUpon>
        </Content>
        <Content Update="http-client.private.env.json">
            <DependentUpon>http-client.http</DependentUpon>
        </Content>
    </ItemGroup>

    <ItemGroup Condition="'$(UsingIdentity)' == 'true'">
        <Content Remove="Views\Shared\_Header.cshtml" />
        <Content Remove="Views\Shared\_LoginPartial.cshtml" />
    </ItemGroup>
    <ItemGroup Condition="'$(UsingIdentity)' == 'false'">
        <Content Remove="Views\Shared\_Header.Identity.cshtml" />
        <Content Remove="Views\Shared\_LoginPartial.Identity.cshtml" />
    </ItemGroup>

    <ItemGroup Condition="'$(UsingIdentity)' == 'true'">
        <Content Remove="Views\Account\**" />
        <EmbeddedResource Remove="Views\Account\**" />
    </ItemGroup>
    <ItemGroup Condition="'$(UsingIdentity)' == 'false'">
        <Compile Remove="Areas\Identity\**" />
        <EmbeddedResource Remove="Areas\Identity\**" />
        <None Remove="Areas\Identity\**" />

        <Compile Remove="Areas\Admin\Views\Users\**" />
        <EmbeddedResource Remove="Areas\Admin\Views\Users\**" />
        <None Remove="Areas\Admin\Views\Users\**" />

        <Compile Remove="Services\SmtpSender.cs" />
        <Compile Remove="Controllers\API\UsersController.cs" />
        <Compile Remove="Areas\Admin\Controllers\UsersController.cs" />

        <Content Remove="Areas\Identity\**" />
        <Content Remove="Areas\Admin\Views\Users\**" />
    </ItemGroup>

    <ItemGroup Condition="('$(UsingAuth0)' == 'true' OR '$(UsingOpenId)' == 'true') OR '$(UsingBearer)' == 'false'">
        <Compile Remove="Controllers\Api\AccountController.cs" />
    </ItemGroup>

</Project>
